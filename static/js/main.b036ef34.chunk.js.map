{"version":3,"sources":["assets/Ready.png","assets/LeaderboardFull.png","assets/Logo.png","pages/Home.js","pages/Host.js","components/Timer.js","components/Question.js","components/Answer.js","pages/Quiz.js","pages/Waiting.js","pages/WaitingHost.js","pages/Leaderboard.js","Main.js","App.js","index.js"],"names":["module","exports","Home","useState","sessionID","setSessionID","displayName","setDisplayName","submitted","setSubmitted","quizFound","setQuizFound","cookies","Cookies","className","src","require","alt","width","onSubmit","event","preventDefault","axios","get","params","then","response","console","log","data","set","path","status","catch","error","required","title","pattern","value","placeholder","onChange","target","type","to","Host","quizName","setQuizName","numberOfRounds","setNumberOfRounds","numberOfQuestionsPerRound","setNumberOfQuestionsPerRound","timeBetweenRounds","setTimeBetweenRounds","timePerQuestion","setTimePerQuestion","created","setCreated","hostUId","Timer","timer","handleFilterAnswer","correctAnswer","counter","setCounter","isTimeout","setIsTimeout","useEffect","setTimeout","Question","questions","question","Answer","answers","userID","filterAnswer","selected","setSelected","isSelected","setIsSelected","handleClassNameSelected","answer","handleClassNameCorrect","OnFilterAnswer","map","key","disabled","handleAnswerOptionClick","sendAnswer","onClick","Quiz","showLeaderboard","setShowLeaderboard","isLoadingQuestion","setLoadingQuestion","setFilterAnswer","setQuestions","getQuestion","Waiting","isLoadingGame","setLoadingGame","gameSession","setGameSession","getGameSession","toUpperCase","numberOfUsers","gameInProgress","WaitingHost","sessionId","Leaderboard","leaderboard","setLeaderboard","isLoadingLeaderboard","setLoadingLeaderboard","user","i","score","highestStreak","Main","exact","component","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.b036ef34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ready.0ea0042b.png\";","module.exports = __webpack_public_path__ + \"static/media/LeaderboardFull.bee86d1d.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.608bd790.png\";","import React, { useState } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst Home = () => {\n  const [ sessionID, setSessionID ] = useState('')\n  const [ displayName, setDisplayName ] = useState('')\n  const [ submitted, setSubmitted ] = useState(false)\n  const [ quizFound, setQuizFound ] = useState(true)\n  const cookies = new Cookies()\n\n  const handleSessionIDChange = (event) => {\n    console.log(event.target.value)\n    setSessionID(event.target.value)\n  }\n\n  const handleDisplayNameChange = (event) => {\n    console.log(event.target.value)\n    setDisplayName(event.target.value)\n  }\n\n  const sendUserDetails = (event) => {\n    event.preventDefault();\n    axios\n    .get('https://team9app.azurewebsites.net/api/quizzarr/newUserAndJoin', { params: {\n      displayName,\n      sessionID\n    }})\n    .then(response => {\n      console.log(response.data);\n      cookies.set('userID', response.data, { path: '/' });\n      setQuizFound(response.status)\n      setSubmitted(true)\n      setQuizFound(true)\n    })\n    .catch(error => {\n      console.error('There was an error!', error);\n      setQuizFound(false)\n    })\n  }\n\n  return (\n    <div>\n      <div className='ready-graphic'>\n        <img src={require('../assets/Ready.png')} alt='Ready for a quiz?' width=\"500\"></img>\n      </div>\n      { quizFound ? null : <div>Quiz ID not found or nickname already taken</div> }\n      <form onSubmit={sendUserDetails}>\n        <div className='start-form'>\n          <input required title=\"Quiz ID should be 6 digits.\" pattern=\"\\d{6}\" value={sessionID} placeholder='Quiz ID' onChange={handleSessionIDChange} />\n          <input required value={displayName} placeholder='Nickname' onChange={handleDisplayNameChange} />\n        <button className='start-button' type=\"submit\">START</button>\n        <Link to=\"/host\"><button className='host-home-button'>HOST</button></Link>\n        </div>\n      </form>\n      { submitted ? <Redirect to=\"/waiting\"/> : null }\n    </div>\n  )\n}\n\nexport default Home","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst Host = () => {\n  const [ displayName, setDisplayName ] = useState('')\n  const [ quizName, setQuizName ] = useState('')\n  const [ numberOfRounds, setNumberOfRounds ] = useState('')\n  const [ numberOfQuestionsPerRound, setNumberOfQuestionsPerRound ] = useState('')\n  const [ timeBetweenRounds, setTimeBetweenRounds ] = useState('')\n  const [ timePerQuestion, setTimePerQuestion ] = useState('')\n  const [ submitted, setSubmitted ] = useState(false)\n  const [ created, setCreated ] = useState(false)\n  const cookies = new Cookies()\n\n  const handleDisplayNameChange = (event) => {\n    console.log(event.target.value)\n    setDisplayName(event.target.value)\n  }\n\n  const handleQuizNameChange = (event) => {\n   console.log(event.target.value)\n   setQuizName(event.target.value)\n  }\n\n  const handleNoRoundsChange = (event) => {\n        console.log(event.target.value)\n        setNumberOfRounds(event.target.value)\n}\n\nconst handleNoQuestionsChange = (event) => {\n        console.log(event.target.value)\n        setNumberOfQuestionsPerRound(event.target.value)\n}\n\nconst handleTimeRoundsChange = (event) => {\n        console.log(event.target.value)\n        setTimeBetweenRounds(event.target.value)\n}\n\nconst handleTimeQuestionsChange = (event) => {\n        console.log(event.target.value)\n        setTimePerQuestion(event.target.value)\n}\n       \n  const sendUserDetails = (event) => {\n    event.preventDefault();\n    axios\n    .get('https://team9app.azurewebsites.net/api/quizzarr/newUser', { params: { displayName }})\n    .then(response => {\n      console.log(response.data);\n      cookies.set('userID', response.data, { path: '/' });\n      setSubmitted(true)\n    })\n    .catch(error => {\n      console.error('There was an error!', error);\n    })\n\n    if (numberOfRounds === '') {\n        setNumberOfRounds('3')\n    }\n    if (numberOfQuestionsPerRound === '') {\n        setNumberOfQuestionsPerRound('10')\n    }\n    if (timeBetweenRounds === '') {\n        setTimeBetweenRounds('5')\n    }\n    if (timePerQuestion === '') {\n        setTimePerQuestion('15')\n  }\n}\n\nconst createSession = () => {\n    axios\n    .get('https://team9app.azurewebsites.net/api/quizzarr/newSession', { params: {\n        hostUId: cookies.get('userID'),\n        quizName,\n        numberOfRounds,\n        numberOfQuestionsPerRound,\n        timeBetweenRounds,\n        timePerQuestion\n    }})\n    .then(response => {\n      console.log(response.data);\n    })\n    .catch(error => {\n      console.error('There was an error!', error);\n    })\n  }\n\n  if (submitted === true && created === false) {\n        createSession()\n        setCreated(true)\n  }\n\n  return (\n    <div>\n      <div className='host-text'>\n        <div>HOST A QUIZ</div>\n        <div>We will select all the questions for you</div>\n      </div>\n      <form onSubmit={sendUserDetails}>\n        <div className='host-form'>\n\n        <label>Your Nickname</label>\n          <input required value={displayName} onChange={handleDisplayNameChange} />\n\n          <label>Quiz Name</label>\n          <input required value={quizName} onChange={handleQuizNameChange} />\n\n          <label>Rounds</label>\n          <input title=\"Select the number of rounds between 1 and 15.\" pattern=\"[1-9][0-5]?\" value={numberOfRounds} placeholder='3' onChange={handleNoRoundsChange} />\n\n          <label>Questions per Round</label>\n          <input title=\"Select the number of questions per round between 1 and 50.\" pattern=\"[1-9]|[0-4][0-9]|[5][0]\" value={numberOfQuestionsPerRound} placeholder='10' onChange={handleNoQuestionsChange} />\n\n          <label>Time between Rounds (minutes)</label>\n          <input title=\"Select the time between rounds between 1 and 30 minutes.\" pattern=\"[1-9]|[0-2][0-9]|[3][0]\" value={timeBetweenRounds} placeholder='5' onChange={handleTimeRoundsChange} />\n\n          <label>Time per Question (seconds)</label>\n          <input title=\"Select time per question between 1 and 100 seconds.\" pattern=\"[1-9]|[0-9][0-9]|[1][0][0]\" value={timePerQuestion} placeholder='15' onChange={handleTimeQuestionsChange} />\n\n        <button className='host-button' type=\"submit\">HOST</button>\n        </div>\n      </form>\n      { submitted ? <Redirect to=\"/hosting\"/> : null }\n    </div>\n  )\n}\n\nexport default Host","import React, { useState, useEffect } from 'react'\n\nconst Timer = ({ timer, correctAnswer, handleFilterAnswer }) => {\n  const [counter, setCounter] = useState(timer)\n  const [isTimeout, setIsTimeout] = useState(false)\n\n  useEffect(() => \n  {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  if (counter === 0)\n  {\n    if (isTimeout === false) {\n      handleFilterAnswer()\n      setTimeout(() => {\n        setCounter(timer)\n        setIsTimeout(false)\n      }, 5000);\n      setIsTimeout(true)\n    }\n    return (\n      <div className=\"App\">\n      <div></div>\n      </div>\n    )\n  }\n  else\n  {\n    return (\n        <div className=\"App\">\n        <div>Time Left: {counter}</div>\n        </div>\n      )\n  }\n}\n\nexport default Timer;","import React from \"react\";\n\nconst Question = ({ questions }) => (\n    <div>\n        {questions.question}\n    </div>\n  )\n\n  export default Question;","import React, { useState } from \"react\"\nimport axios from 'axios'\n\nconst Answer = ({ type, answers, correctAnswer, userID, filterAnswer, handleFilterAnswer }) => {\n    const [selected, setSelected] = useState('')\n    const [isSelected, setIsSelected] = useState(false)\n\n    const sendAnswer = (answer) => {\n      axios\n      .get('https://team9app.azurewebsites.net/api/quizzarr/submitAnswer', { params: {\n        userID,\n        answer\n      }})\n      .then(response => {\n        console.log(response.data);\n        console.log(\"Answer sent\")\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      })\n    }\n    \n    const handleClassNameSelected = ( answer ) => {\n      if (answer === correctAnswer) return 'button-correct' // this should be commented out\n      if (answer === selected) return 'button-selected'\n      else return 'button-normal'\n    }\n\n    const handleClassNameCorrect = ( answer ) => {\n      if (answer === correctAnswer) return 'button-correct'\n      else if (answer === selected) return 'button-selected'\n      else return 'button-normal'\n    }\n\n    // this now shows both selected and correct at the same time\n    const OnFilterAnswer = ( isSelected ) => {   \n      if (isSelected === true) { // set selected\n        return(\n          <div>\n            <div className='answer-section'>{answers.map(answer => \n               <button\n                 key={answer}\n                 className={handleClassNameSelected(answer)}\n                 disabled={true}>{answer}</button>)}</div>\n              </div>)\n      }\n      else if (isSelected === false) { // when timer is out, the state filter answer is set to true but it's not getting rerendered\n        return(\n          <div>\n            <div className='answer-section'>{answers.map(answer => \n               <button\n                 key={answer}\n                 className={handleClassNameCorrect(answer)}\n                 disabled={true}>{answer}</button>)}</div>\n              </div>)\n      }\n    }\n\n    const handleAnswerOptionClick = (answer) => {\n      setSelected(answer)\n      setIsSelected(true)\n      sendAnswer(answer)\n      handleFilterAnswer() // this is where selected function should be called\n      console.log(\"Click Answer\")\n  }\n\n  if (type === \"MultiChoice\") {\n    return (\n      <div className='answer-section'>\n        {filterAnswer ? \n          OnFilterAnswer(isSelected)\n           :\n        <div className='answer-section'>{answers.map((answer) => (\n          <button\n          key={answer}\n          className=\"button-normal\"\n          disabled={false}\n          onClick={()=>handleAnswerOptionClick(answer)}>{answer}</button>\n        ))}</div>}\n    </div>\n    )\n  }\n\nelse if (type === \"TrueFalse\") {\n  return (\n    <div className='answer-section'>\n        {filterAnswer ? \n          OnFilterAnswer(isSelected)\n           :\n        <div className='answer-section'>{answers.map((answer) => (\n          <button\n          key={answer}\n          className=\"button-normal\"\n          disabled={false}\n          onClick={()=>handleAnswerOptionClick(answer)}>{answer}</button>\n        ))}</div>}\n    </div>\n  )\n}\n\n  else { // estimation, writtenQ\n      return (<></>)\n  }\n}\n\n  export default Answer;","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport Timer from '../components/Timer'\nimport Question from '../components/Question'\nimport Answer from '../components/Answer'\nimport Cookies from 'universal-cookie'\n\nconst Quiz = () => {\n  const [showLeaderboard, setShowLeaderboard] = useState(false)\n  const [isLoadingQuestion, setLoadingQuestion] = useState(true)\n  const [isTimeout, setIsTimeout] = useState(false)\n  const [filterAnswer, setFilterAnswer] = useState(false)\n  //const [timer, setTimer] = useState('')\n  let timer = 15\n  const [questions, setQuestions] = useState([])\n  const cookies = new Cookies()\n\n    const getQuestion = () => {\n      console.log('Getting Question')\n      axios\n      .get('https://team9app.azurewebsites.net/api/quizzarr/getQuestion', { params: { userID: cookies.get('userID') } })\n      .then(response => {\n        console.log('promise fulfilled')\n        console.log(response.data)\n        setQuestions(response.data)\n        setFilterAnswer(false)\n        setLoadingQuestion(false)\n      })\n      .catch(error => {\n        console.log('There was an error!', error)\n        if (error.response.status === 404) {\n          setShowLeaderboard(true)\n        }\n      })\n      setLoadingQuestion(false);\n    }\n\n    if (isLoadingQuestion) {\n      console.log('loading questions')\n      getQuestion()\n      return <div className=\"App\"></div>\n    }\n\n    // if timer is empty set the timer - just do it once\n\n    if (isTimeout === false) {\n      setFilterAnswer(false)\n      setTimeout(() => {\n        getQuestion()\n        setIsTimeout(false)\n      }, 20000);\n      setIsTimeout(true)\n    }\n\n    const handleFilterAnswer = () =>{\n        console.log(\"Filter answer is true\")\n        setFilterAnswer(true)\n        // force to rerender answer\n    }\n\n    return (\n      <div>\n        <div className='app'>\n              <div className='question'><Question questions={questions} /></div>\n              <Answer \n              type = {questions.type}\n              answers = {questions.answers}\n              correctAnswer = {questions.correctAnswer}\n              userID = {cookies.get('userID')}\n              filterAnswer = {filterAnswer}\n              handleFilterAnswer = {()=>handleFilterAnswer()}\n              />\n              <div className='timer'><Timer timer={timer} handleFilterAnswer={()=>handleFilterAnswer()}/></div>\n        </div>\n        <div>\n          { showLeaderboard ? <Redirect to=\"/leaderboard\"/> : null }\n        </div>\n      </div>\n  )\n}\n\nexport default Quiz","import React, {useState} from \"react\"\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\n\nconst Waiting = () => {\n    const [isLoadingGame, setLoadingGame] = useState(true)\n    const [isTimeout, setIsTimeout] = useState(false)\n    const [gameSession, setGameSession] = useState([])\n    const cookies = new Cookies()\n\n    const getGameSession = () => {\n        console.log('Getting Game Status')\n        axios\n        .get('https://team9app.azurewebsites.net/api/quizzarr/gameSessionStatus', { params: { userID: cookies.get('userID') } })\n        .then(response => {\n          console.log('promise fulfilled')\n          setGameSession(response.data)\n          setLoadingGame(false)\n          console.log(response.data)\n        })\n        .catch(error => {\n          console.error('There was an error!', error)\n        })\n      }\n\n    if (isTimeout === false) {\n      setTimeout(() => {\n        getGameSession()\n        setIsTimeout(false)\n      }, 3000); // set to 1500\n      setIsTimeout(true)\n    }\n\n    if (isLoadingGame) {\n        console.log('Loading game session')\n        getGameSession()\n        return <div className=\"app\">Loading game session</div>\n    }\n  \n    return (\n        <div className='app'>\n          <div className='waiting'>\n          <div className='quiz-name'>{gameSession.quizName.toUpperCase()}</div>\n          <div className='waiting-text'>{gameSession.numberOfRounds} ROUND(S) OF {gameSession.numberOfQuestionsPerRound} QUESTIONS</div>\n          <div className='waiting-text'></div>\n          <div className='waiting-text'>PEOPLE JOINED: {gameSession.numberOfUsers}</div>\n          </div>\n          <div className=\"loadingio-spinner-ellipsis-8ty8wmpuhyh\"><div className=\"ldio-ctuwgjg8ktk\">\n          <div></div><div></div><div></div><div></div><div></div>\n          </div></div>\n          { gameSession.gameInProgress ? <Redirect to=\"/quiz\"/> : null }\n        </div>\n    )\n}\n\n  export default Waiting","import React, {useState} from \"react\"\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\n\nconst WaitingHost = () => {\n    const [isLoadingGame, setLoadingGame] = useState(true)\n    const [isTimeout, setIsTimeout] = useState(false)\n    const [gameSession, setGameSession] = useState([])\n    const cookies = new Cookies()\n\n    const getGameSession = () => {\n        console.log('Getting Game Status')\n        axios\n        .get('https://team9app.azurewebsites.net/api/quizzarr/gameSessionStatus', { params: { userID: cookies.get('userID') } })\n        .then(response => {\n          console.log('promise fulfilled')\n          setGameSession(response.data)\n          setLoadingGame(false)\n          console.log(response.data)\n        })\n        .catch(error => {\n          console.error('There was an error!', error)\n        })\n      }\n    \n      const startSession = () => {\n        console.log('Starting Session')\n        axios\n        .get('https://team9app.azurewebsites.net/api/quizzarr/startSession', { params: { hostUId: cookies.get('userID') } })\n        .then(response => {\n          console.log('promise fulfilled')\n          console.log(response.data)\n        })\n        .catch(error => {\n          console.error('There was an error!', error)\n        })\n      }\n\n    if (isTimeout === false) {\n      setTimeout(() => {\n        getGameSession()\n        setIsTimeout(false)\n      }, 3000); // set to 1500\n      setIsTimeout(true)\n    }\n\n    if (isLoadingGame) {\n        console.log('Loading game session')\n        getGameSession()\n        return <div className=\"app\">Loading game session</div>\n    }\n  \n    return (\n        <div className='app'>\n          <div className='waiting'>\n          <div className='quiz-name'>{gameSession.quizName.toUpperCase()}</div>\n          <div className='waiting-text'>TO JOIN THIS GAME TYPE IN</div>\n          <button className='quiz-id-button' disabled>{gameSession.sessionId}</button>\n          <div className='waiting-text'></div>\n          <div className='waiting-text'>PEOPLE JOINED: {gameSession.numberOfUsers}</div>\n          </div>\n          <button className='start-button' onClick={startSession}>START</button>\n          { gameSession.gameInProgress ? <Redirect to=\"/quiz\"/> : null }\n        </div>\n    )\n}\n\n  export default WaitingHost","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst Leaderboard = ({ }) => {\n    const [leaderboard, setLeaderboard] = useState([])\n    const [isLoadingLeaderboard, setLoadingLeaderboard] = useState(true)\n    const cookies = new Cookies()\n\n    const getLeaderboard = () => {\n        console.log('Getting Leaderboard')\n        axios\n        .get('https://team9app.azurewebsites.net/api/quizzarr/getLeaderBoard', { params: { userID: cookies.get('userID') } })\n        .then(response => {\n          console.log('promise fulfilled')\n          setLeaderboard(response.data)\n          setLoadingLeaderboard(false)\n        })\n        .catch(error => {\n          console.error('There was an error!', error)\n        })\n    }\n\n    if (isLoadingLeaderboard) {\n        console.log('loading leaderboard')\n        getLeaderboard()\n        return <div className=\"app\"></div>\n    }\n\n    // formatted with podiums\n    return (\n        <div>\n            <div className='leaderboard'>\n                <img src={require('../assets/LeaderboardFull.png')} alt='Leaderboard' width=\"800\"></img>\n                <div className='leaderboard-text'>{leaderboard.map((user, i) => {return (<div key={i+1} className=\"rank\"> {i+1}. {user.displayName} Score: {user.score} Highest Streak: {user.highestStreak}</div>)})}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard;","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Host from './pages/Host'\nimport Quiz from './pages/Quiz'\nimport Waiting from './pages/Waiting'\nimport WaitingHost from './pages/WaitingHost'\nimport Leaderboard from './pages/Leaderboard'\n\nconst Main = () => {\n  \n  return (\n    <Switch>\n      <Route exact path='/' component={Home}></Route>\n      <Route exact path='/host' component={Host}></Route>\n      <Route exact path='/quiz' component={Quiz}></Route>\n      <Route exact path='/waiting' component={Waiting}></Route>\n      <Route exact path='/hosting' component={WaitingHost}></Route>\n      <Route exact path='/leaderboard' component={Leaderboard}></Route>\n    </Switch>\n  )\n}\n\nexport default Main","import React from 'react'\nimport Main from './Main'\n\nconst App = () => {\n\n  return (\n    <div>\n      <div className='quiz-logo'>\n        <img src={require('./assets/Logo.png')} alt='Quiz Logo' width=\"280\"></img>\n      </div>\n        <Main />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n  ), document.getElementById('root')\n)"],"sourceRoot":""}