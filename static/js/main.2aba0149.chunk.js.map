{"version":3,"sources":["assets/Ready.png","assets/LeaderboardFull.png","assets/Logo.png","pages/Home.js","pages/Host.js","components/Timer.js","components/Question.js","components/Answer.js","pages/Quiz.js","pages/Waiting.js","pages/Leaderboard.js","Main.js","App.js","index.js"],"names":["module","exports","Home","useState","sessionID","setSessionID","displayName","setDisplayName","submitted","setSubmitted","cookies","Cookies","className","src","require","alt","width","onSubmit","event","preventDefault","axios","get","params","then","response","console","log","data","set","path","catch","error","value","placeholder","onChange","target","type","to","Host","Timer","timer","correctAnswer","counter","setCounter","isTimeout","setIsTimeout","useEffect","setTimeout","Question","questions","question","Answer","answers","userID","setIsAnswerRight","handleAnswerOptionClick","answer","sendAnswer","map","onClick","key","Quiz","showLeaderboard","setShowLeaderboard","isLoadingQuestion","setLoadingQuestion","setQuestions","getQuestion","status","Waiting","isLoadingGame","setLoadingGame","gameSession","setGameSession","getGameSession","quizName","toUpperCase","numberOfRounds","numberOfQuestions","numberOfUsers","gameInProgress","Leaderboard","leaderboard","setLeaderboard","isLoadingLeaderboard","setLoadingLeaderboard","user","i","score","highestStreak","Main","exact","component","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2aba0149.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ready.0ea0042b.png\";","module.exports = __webpack_public_path__ + \"static/media/LeaderboardFull.bee86d1d.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.608bd790.png\";","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst Home = () => {\n  const [ sessionID, setSessionID ] = useState('')\n  const [ displayName, setDisplayName ] = useState('')\n  const [ submitted, setSubmitted ] = useState(false)\n  const cookies = new Cookies()\n\n  // if (cookies.get('userID') != null) {\n  //   cookies.remove('userID')\n  // }\n\n  const handleSessionIDChange = (event) => {\n    console.log(event.target.value)\n    setSessionID(event.target.value)\n  }\n\n  const handleDisplayNameChange = (event) => {\n    console.log(event.target.value)\n    setDisplayName(event.target.value)\n  }\n\n  const sendUserDetails = (event) => {\n    event.preventDefault();\n    axios\n    .get('https://team9app.azurewebsites.net/api/quizzarr/newUserAndJoin', { params: {\n      displayName,\n      sessionID\n    }})\n    .then(response => {\n      console.log(response.data);\n      cookies.set('userID', response.data, { path: '/' });\n      setSubmitted(true)\n    })\n    .catch(error => {\n      console.error('There was an error!', error);\n    })\n  }\n\n  return (\n    <div>\n      <div className='ready-graphic'>\n        <img src={require('../assets/Ready.png')} alt='Ready for a quiz?' width=\"500\"></img>\n      </div>\n      <form onSubmit={sendUserDetails}>\n        <div className='start-form'>\n          <input value={sessionID} placeholder='Quiz ID' onChange={handleSessionIDChange} />\n          <input value={displayName} placeholder='Nickname' onChange={handleDisplayNameChange} />\n        <button className='start-button' type=\"submit\">START</button>\n        </div>\n      </form>\n      { submitted ? <Redirect to=\"/waiting\"/> : null }\n    </div>\n  )\n}\n\nexport default Home","import React from \"react\"\n\nconst Host = () => {\n    console.log(\"host\")\n    return (\n        <div>\n                Host\n        </div>\n        )\n}\n\nexport default Host","import React, { useState, useEffect } from 'react'\n\nconst Timer = ({ timer, correctAnswer }) => {\n  const [counter, setCounter] = useState(timer)\n  const [isTimeout, setIsTimeout] = useState(false)\n\n  useEffect(() => \n  {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  if (counter === 0)\n  {\n    if (isTimeout === false) {\n      setTimeout(() => {\n        setCounter(timer)\n        setIsTimeout(false)\n      }, 5000);\n      setIsTimeout(true)\n    }\n    return (\n      <div className=\"App\">\n      <div></div>\n      </div>\n    )\n  }\n  else\n  {\n    return (\n        <div className=\"App\">\n        <div>Time Left: {counter}</div>\n        </div>\n      )\n  }\n}\n\nexport default Timer;","import React, { useState } from \"react\";\n\nconst Question = ({ questions }) => (\n    <div>\n        {questions.question}\n    </div>\n  )\n\n  export default Question;","import React, { useState } from \"react\"\nimport axios from 'axios'\n\nconst Answer = ({ answers, type, userID }) => {\n    const [isAnswerRight, setIsAnswerRight] = useState(false)\n\n    const sendAnswer = (answer) => {\n      axios\n      .get('https://team9app.azurewebsites.net/api/quizzarr/submitAnswer', { params: {\n        userID,\n        answer\n      }})\n      .then(response => {\n        console.log(response.data);\n        setIsAnswerRight(response.data)\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      })\n    }\n\n    const showAnswer = () => {\n      // color the correct answer\n      // after the timer is done\n    }\n    \n    const handleAnswerOptionClick = (answer) => {\n        sendAnswer(answer)\n        // return (\n        //   <div className='answer-section'>\n        //     {questions.answers.map((answer) => (\n        //     <button disabled key={answer}>{answer}</button>\n        //     ))}\n        //   </div>\n        // )\n        // disable buttons\n        // colour the chosen button\n    }\n\n  if (type === \"MultiChoice\") {\n      return (\n        <div className='answer-section'>\n          {answers.map((answer) => (\n          <button onClick={() => handleAnswerOptionClick(answer)} key={answer}>{answer}</button>\n          ))}\n        </div>\n      )\n    }\n\n  else if (type === \"TrueFalse\") {\n    return (\n      <div className='answer-section'>\n          {answers.map((answer) => (\n          <button onClick={() => handleAnswerOptionClick(answer)} key={answer}>{answer}</button>\n          ))}\n      </div>\n    )\n  }\n\n    else { // estimation, writtenQ\n        return (<></>)\n    }\n}\n\n  export default Answer;","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport Timer from '../components/Timer'\nimport Question from '../components/Question'\nimport Answer from '../components/Answer'\nimport Cookies from 'universal-cookie'\n\nconst Quiz = () => {\n  const [showLeaderboard, setShowLeaderboard] = useState(false)\n  const [isLoadingQuestion, setLoadingQuestion] = useState(true)\n  const [isTimeout, setIsTimeout] = useState(false)\n  let timer = 15 // get game status and see what time it is\n  const [questions, setQuestions] = useState([])\n  const cookies = new Cookies()\n\n    const getQuestion = () => {\n      console.log('Getting Question')\n      axios\n      .get('https://team9app.azurewebsites.net/api/quizzarr/getQuestion', { params: { userID: cookies.get('userID') } })\n      .then(response => {\n        console.log('promise fulfilled')\n        console.log(response.data)\n        setQuestions(response.data)\n        setLoadingQuestion(false)\n      })\n      .catch(error => {\n        console.log('There was an error!', error)\n        if (error.response.status === 404) {\n          setShowLeaderboard(true)\n        }\n      })\n    }\n\n    if (isLoadingQuestion) {\n      console.log('loading questions')\n      getQuestion()\n      return <div className=\"App\"></div>\n    }\n\n    if (isTimeout === false) {\n      setTimeout(() => {\n        getQuestion()\n        setIsTimeout(false)\n      }, 20000);\n      setIsTimeout(true)\n    }\n\n    return (\n      <div>\n        <div className='app'>\n              <div className='question'><Question questions={questions} /></div>\n              <Answer answers={questions.answers} type={questions.type} userID={cookies.get('userID')} />\n              <div className='timer'><Timer timer={timer} correctAnswer={questions.correctAnswer}/></div>\n              {/* <CorrectAnswer timer={timer} correctAnswer={questions.correctAnswer}/> */}\n        </div>\n        <div>\n          { showLeaderboard ? <Redirect to=\"/leaderboard\"/> : null }\n        </div>\n      </div>\n  )\n}\n\nexport default Quiz","import React, {useState} from \"react\"\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\n\nconst Waiting = () => {\n    const [isLoadingGame, setLoadingGame] = useState(true)\n    const [isTimeout, setIsTimeout] = useState(false)\n    const [gameSession, setGameSession] = useState([])\n    const cookies = new Cookies()\n\n    const getGameSession = () => {\n        console.log('Getting Game Status')\n        axios\n        .get('https://team9app.azurewebsites.net/api/quizzarr/gameSessionStatus', { params: { userID: cookies.get('userID') } })\n        .then(response => {\n          console.log('promise fulfilled')\n          setGameSession(response.data)\n          setLoadingGame(false)\n          console.log(response.data)\n        })\n        .catch(error => {\n          console.error('There was an error!', error)\n        })\n      }\n\n    if (isTimeout === false) {\n      setTimeout(() => {\n        getGameSession()\n        setIsTimeout(false)\n      }, 3000); // set to 1500\n      setIsTimeout(true)\n    }\n\n    if (isLoadingGame) {\n        console.log('Loading game session')\n        getGameSession()\n        return <div className=\"app\">Loading game session</div>\n    }\n  \n    return (\n        <div className='app'>\n          <div className='waiting'>\n          <div className='quiz-name'>{gameSession.quizName.toUpperCase()}</div>\n          <div className='waiting-text'>{gameSession.numberOfRounds} ROUND OF {gameSession.numberOfQuestions} QUESTIONS</div>\n          <div className='waiting-text'></div>\n          <div className='waiting-text'>PEOPLE JOINED: {gameSession.numberOfUsers}</div>\n          </div>\n          <div className=\"loadingio-spinner-ellipsis-8ty8wmpuhyh\"><div className=\"ldio-ctuwgjg8ktk\">\n          <div></div><div></div><div></div><div></div><div></div>\n          </div></div>\n          { gameSession.gameInProgress ? <Redirect to=\"/quiz\"/> : null }\n        </div>\n    )\n}\n\n  export default Waiting","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst Leaderboard = ({ }) => {\n    const [leaderboard, setLeaderboard] = useState([])\n    const [isLoadingLeaderboard, setLoadingLeaderboard] = useState(true)\n    const cookies = new Cookies()\n\n    const getLeaderboard = () => {\n        console.log('Getting Leaderboard')\n        axios\n        .get('https://team9app.azurewebsites.net/api/quizzarr/getLeaderBoard', { params: { userID: cookies.get('userID') } })\n        .then(response => {\n          console.log('promise fulfilled')\n          setLeaderboard(response.data)\n          setLoadingLeaderboard(false)\n        })\n        .catch(error => {\n          console.error('There was an error!', error)\n        })\n    }\n\n    if (isLoadingLeaderboard) {\n        console.log('loading leaderboard')\n        getLeaderboard()\n        return <div className=\"app\"></div>\n    }\n\n    // not returning rank, should be properly formatted\n    return (\n        <div>\n            <div className='leaderboard'>\n                <img src={require('../assets/LeaderboardFull.png')} alt='Leaderboard' width=\"800\"></img>\n                <div className='leaderboard-text'>{leaderboard.map((user, i) => {return (<div key={i+1} className=\"rank\"> {i+1}. {user.displayName} Score: {user.score} Highest Streak: {user.highestStreak}</div>)})}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard;","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Host from './pages/Host'\nimport Quiz from './pages/Quiz'\nimport Waiting from './pages/Waiting'\nimport Leaderboard from './pages/Leaderboard'\n\nconst Main = () => {\n  \n  return (\n    <Switch>\n      <Route exact path='/' component={Home}></Route>\n      <Route exact path='/host' component={Host}></Route>\n      <Route exact path='/quiz' component={Quiz}></Route>\n      <Route exact path='/waiting' component={Waiting}></Route>\n      <Route exact path='/leaderboard' component={Leaderboard}></Route>\n    </Switch>\n  )\n}\n\nexport default Main","import React from 'react'\nimport Main from './Main'\n\nconst App = () => {\n\n  return (\n    <div>\n      <div className='quiz-logo'>\n        <img src={require('./assets/Logo.png')} alt='Quiz Logo' width=\"280\"></img>\n      </div>\n        <Main />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n  ), document.getElementById('root')\n)"],"sourceRoot":""}